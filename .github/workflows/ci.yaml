name: CI
on: 
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  page_build:
    release:
      types:
        - created

jobs:
  check:
    runs-on: ubuntu-16.04
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Create environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.100' # SDK Version to use.

      - name: Bash shell lint report
        uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-check
          level: error
          pattern: '*.sh'
          path: '.'
          exclude: './test/*'
      
      - name: Install dotnet-format for linting
        run: dotnet tool install -g dotnet-format

      - name: Linter problem catcher
        uses: xt0rted/dotnet-format-problem-matcher@v1

      - name: Dotnet lint report
        run: dotnet format --folder AKSKubeAuditReceiverSolution/ --dry-run

      - name: Build
        run: dotnet build AKSKubeAuditReceiverSolution/AKSKubeAuditReceiver.sln

      - name: Test
        run: dotnet test AKSKubeAuditReceiverSolution/AKSKubeAuditReceiver.sln

      - name: Sysdig CIS Dockerfile Benchmark
        uses: sysdiglabs/benchmark-dockerfile@v1.0.0
        id: cis_dockerfile_benchmark
        with:
          disallowedPackages: 'netcat'
          secretPatterns: 'aws_secret,pass'
        

      - name: Post Sysdig CIS Dockerfile Benchmark
        env:
          SYSDIG_SECURE_TOKEN: ${{ secrets.KUBELAB_SECURE_API_TOKEN }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_SHA: ${{ github.event.pull_request.head.sha }}
          PR_OWNER: ${{ github.event.pull_request.head.user.login }}
        run: |
          echo "###"
          echo "{\"pr_name\": \"${PR_TITLE}\", \"pr_sha\": \"${PR_SHA}\", \"pr_owner\": \"${PR_OWNER}\"}" > /tmp/report.json
          echo ${{ toJSON(steps.cis_dockerfile_benchmark.outputs.violation_report) }} > /tmp/report
          reportString=$(sed 's/"/\\"/g' /tmp/report)
          echo $reportString
          
          # send result to Sysdig monitor
          curl -X POST -s https://app.sysdigcloud.com/api/events -H 'Content-Type: application/json; charset=UTF-8' -H 'Authorization: Bearer '"${SYSDIG_SECURE_TOKEN}"'' -d '{"event":{"name":"CIS Dockerfile Benchmark - PR: '"${PR_TITLE}"' ","description":"'"${reportString}"'","severity":"6"}}' --compressed
          echo "###"
          
          # echo "Stop here!"
          # exit 1

      - name: Build the Docker image
        run: docker build -f ./AKSKubeAuditReceiverSolution/AKSKubeAuditReceiver/Dockerfile ./AKSKubeAuditReceiverSolution --tag sysdiglabs/aks-audit-log-forwarder:auto

      - name: Scan image
        uses: sysdiglabs/scan-action@v2
        with:
          image-tag: "sysdiglabs/aks-audit-log-forwarder:auto"
          sysdig-secure-token: ${{ secrets.KUBELAB_SECURE_API_TOKEN }}